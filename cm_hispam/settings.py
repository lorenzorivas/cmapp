"""
Django settings for cm_hispam project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-bi+)qx3k=in$$kin+e5li^$x9gqw*=khl2rf8l&=)wt_1k7d7d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS =[]


# Application definition

INSTALLED_APPS = [
    # 'grappelli',
    'admin_interface',
    'colorfield',
    #...
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'application.cmapp',
    'tinymce',
    'django_countries',
    'multiselectfield',
    'crispy_forms',
    'bootstrap4',
    'bootstrap_datepicker_plus',
    # 'taggit',
    'django.contrib.humanize',
    'widget_tweaks',
    'django_filters',
    'djmoney',
]

BOOTSTRAP4 = {
    'include_jquery': True,
}

X_FRAME_OPTIONS = 'SAMEORIGIN'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'cm_hispam.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'cm_hispam.wsgi.application'

LOGIN_REDIRECT_URL = 'project:projects'
LOGOUT_REDIRECT_URL = 'project:projects'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'cm_db',
#         'USER': 'cm',
#         'PASSWORD': 'cm',
#         'HOST': 'localhost',
#         'PORT': 5432,
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'es-cl'

TIME_ZONE = 'America/Santiago'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
import os
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

TINYMCE_DEFAULT_CONFIG = {
    "height": "540px",
    "width": "100%",
    "menubar": "file edit view insert format tools table help",
    "plugins": "advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code media tinydrive codesample code imagetools "
    "fullscreen insertdatetime media table paste code help wordcount spellchecker",
    "toolbar": "undo redo | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | codesample image |"
    "outdent indent |  numlist bullist checklist | forecolor "
    "backcolor casechange permanentpen formatpainter removeformat | pagebreak | link blockquote | "
    "fullscreen  preview save print | insertfile image media pageembed template charmap anchor emoticons | fontselect fontsizeselect formatselect |"
    "a11ycheck ltr rtl | showcomments addcomment code",
    "custom_undo_redo_levels": 10,
    'file_picker_callback': "function (cb, value, meta) {"
                            "var input = document.createElement('input');"
                            "input.setAttribute('type', 'file');"
                            "input.setAttribute('accept', 'image/*');"
                            "input.onchange = function(){"
                            "var file = this.files[0];"
                            "var reader = new FileReader();"
                            "reader.onload=function(){"
                            "var id = 'blobid' + (new Date()).getTime();"
                            "var blobCache = tinymce.activeEditor.editorUpload.blobCache;"
                            "var base64 = reader.result.split(',')[1];"
                            "var blobInfo = blobCache.create(id, file, base64);"
                            "blobCache.add(blobInfo);"
                            "cb(blobInfo.blobUri(), { title: file.name });"
                            "};"
                            "reader.readAsDataURL(file);};"
                            "input.click();"
                            "}",
    'code_languages': [
        # {text: 'HTML/XML', value: 'markup'},
        # {text: 'JavaScript', value: 'javascript'},
        # {text: 'CSS', value: 'css'},
        # {text: 'PHP', value: 'php'},
        # {text: 'Ruby', value: 'ruby'},
        {'text': 'Python', 'value': 'python'}
        # {text: 'Java', value: 'java'},
        # {text: 'C', value: 'c'},
        # {text: 'C#', value: 'csharp'},
        # {text: 'C++', value: 'cpp'}
      ],
    "language": "es-cl",  # To force a specific language instead of the Django current language.
}
